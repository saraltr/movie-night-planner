{"mappings":"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","sources":["<anon>","src/js/index.js","src/js/search.js","src/js/homePage.mjs","src/js/externalServices.mjs","src/js/utils.mjs","src/js/userLists.mjs"],"sourcesContent":["// creates the search box\nfunction $82280c2c8608ffc1$export$9eb1cf087813c7e() {\n    const searchInput = document.createElement(\"input\");\n    searchInput.setAttribute(\"type\", \"text\");\n    searchInput.setAttribute(\"id\", \"searchInput\");\n    searchInput.setAttribute(\"placeholder\", \"Enter your search...\");\n    searchInput.classList.add(\"search-input\");\n    // create the search button element\n    const searchButton = document.createElement(\"button\");\n    searchButton.setAttribute(\"id\", \"searchButton\");\n    searchButton.textContent = \"Search\";\n    searchButton.classList.add(\"search-button\");\n    const searchBox = document.createElement(\"div\");\n    searchBox.classList.add(\"search-box\");\n    searchBox.appendChild(searchInput);\n    searchBox.appendChild(searchButton);\n    // append the search box and button to the menu div\n    const menuDiv = document.querySelector(\".menu\");\n    menuDiv.prepend(searchBox);\n}\nfunction $82280c2c8608ffc1$export$4b597114ade5582d(searchTerm) {\n    // Create URL parameters and set the search term\n    const urlParams = new URLSearchParams();\n    urlParams.set(\"search\", searchTerm);\n    // create the new URL with the search term as a parameter\n    const newUrl = `results/results.html?${urlParams.toString()}`;\n    // redirect the page to the new URL\n    window.location.href = newUrl;\n}\n\n\n// retrieve data from localstorage\nfunction $2a0a9d2c002157bd$export$d3720feff416e85b(key) {\n    return JSON.parse(localStorage.getItem(key));\n}\nfunction $2a0a9d2c002157bd$export$1f73f60bdb811cb1(key, data) {\n    localStorage.setItem(key, JSON.stringify(data));\n}\n\n\nasync function $5169deaf9825f95a$export$4c39390267f2b109(title) {\n    const apiKey = \"f8b853da\"; // our active key\n    const baseURL = \"https://www.omdbapi.com/\";\n    const response = await fetch(`${baseURL}?apikey=${apiKey}&t=${title}`);\n    if (response.ok) return response;\n    else throw new Error(\"Something went wrong\");\n}\nasync function $5169deaf9825f95a$export$afe26c2b188eab91(search) {\n    const apiKey = \"f8b853da\";\n    const baseURL = \"https://www.omdbapi.com/\";\n    const response = await fetch(`${baseURL}?apikey=${apiKey}&s=${search}`);\n    if (response.ok) return response;\n    else throw new Error(\"Something went wrong\");\n}\nasync function $5169deaf9825f95a$export$7e5298443cb50a9f(title) {\n    try {\n        const response = await $5169deaf9825f95a$export$4c39390267f2b109(title);\n        const data = await response.json();\n        //   console.log(data);\n        return data;\n    } catch (error) {\n        console.error(error);\n    }\n}\nasync function $5169deaf9825f95a$export$5afefe6cdf78f2a1(search) {\n    try {\n        const response = await $5169deaf9825f95a$export$afe26c2b188eab91(search);\n        const data = await response.json();\n        //   console.log(data);\n        return data.Search // search is the property that returns the array of results\n        ;\n    } catch (error) {\n        console.error(error);\n    }\n}\nfunction $5169deaf9825f95a$export$73bcfb39fabe8205(movie) {\n    const favList = (0, $2a0a9d2c002157bd$export$d3720feff416e85b)(\"fav-list\") || [];\n    const index = favList.findIndex((item)=>{\n        item.Title, movie.Title;\n    });\n    if (index === -1) favList.push({\n        ...movie,\n        poster: movie.Poster,\n        title: movie.Title\n    });\n    (0, $2a0a9d2c002157bd$export$1f73f60bdb811cb1)(\"fav-list\", favList);\n}\n\n\nasync function $3ba5b6daed797c99$export$596743d694fcb1b6() {\n    try {\n        const mainElement = document.querySelector(\"main\");\n        const bannerSection = document.createElement(\"section\");\n        const bannerDiv = document.createElement(\"div\");\n        bannerDiv.classList.add(\"banner\");\n        const bannerTitle = document.createElement(\"h1\");\n        bannerTitle.textContent = \"Welcome to Movie Night Planner!\";\n        const bannerMessage = document.createElement(\"p\");\n        bannerMessage.textContent = \"\\uD83C\\uDFAC -- Lights, Camera, Action! Plan Your Perfect Movie Night. --\\uD83C\\uDF7F\";\n        bannerDiv.appendChild(bannerTitle);\n        bannerDiv.appendChild(bannerMessage);\n        bannerSection.appendChild(bannerDiv);\n        mainElement.appendChild(bannerSection);\n        // fetching movie data using the fetchMovieBySearch function and the keyword \"dark\" as it is common in films name\n        const bannerMovies = await (0, $5169deaf9825f95a$export$5afefe6cdf78f2a1)(\"dark\");\n        //   console.log(bannerMovies); \n        const bannerPosters = $3ba5b6daed797c99$var$createBannerPosters(bannerMovies); // creating the HTML template for banner posters\n        const postersContainer = document.createElement(\"div\");\n        postersContainer.classList.add(\"posters-container\");\n        postersContainer.innerHTML = bannerPosters;\n        // applied additional styling using js to experiment \n        postersContainer.style.display = \"flex\";\n        postersContainer.style.flexDirection = \"row\";\n        postersContainer.style.overflowX = \"auto\";\n        postersContainer.style.gap = \"10px\";\n        postersContainer.style.transform = \"scale(0.8)\";\n        const posterImages = postersContainer.querySelectorAll(\"img\"); // selecting all img elements within the posters container\n        posterImages.forEach((img)=>{\n            // applying additional styling to each poster image\n            img.style.height = \"500px\";\n            img.style.width = \"300px\";\n            img.style.objectFit = \"cover\";\n            img.style.transition = \"transform 0.3s\";\n        });\n        bannerDiv.appendChild(postersContainer);\n    } catch (error) {\n        console.error(\"An error occurred:\", error);\n    }\n}\n// create the HTML template for the banner posters\nfunction $3ba5b6daed797c99$var$createBannerPosters(bannerMovies) {\n    if (!bannerMovies || !Array.isArray(bannerMovies)) return \"\"; // return an empty string if the movie data is invalid\n    let template = \"\";\n    bannerMovies.forEach((movie)=>{\n        const moviePoster = movie.Poster;\n        const mediaType = movie.Type;\n        const movieTitle = movie.Title;\n        if (mediaType === \"movie\") // if the media type is a movie, add the movie details to the template\n        template += `\r\n        <div class=\"movie-details\">\r\n          <a href=\"#\">\r\n          <button id=\"fav-Btn\" data-title=\"${movieTitle}\" onclick=\"${(0, $5169deaf9825f95a$export$73bcfb39fabe8205)(movie)}\"><img src=\"/src/public/images/icons8-favorite-40.png\" alt=\"Fav Icon\"></button>\r\n            <img src=\"${moviePoster}\" alt=\"${movieTitle} poster\"/>\r\n          </a>\r\n        </div>`;\n    });\n    return template;\n}\n\n\n\nfunction $e7d5ca7239cfce20$export$c2559589a6ea7c80(selector) {\n    try {\n        const favList = (0, $2a0a9d2c002157bd$export$d3720feff416e85b)(\"fav-list\") || [];\n        const favEl = document.querySelector(selector);\n        const movie = favList.map((item)=>{\n            const template = `<li>\r\n            <a href=\"#\">\r\n                <h3>${item.Title} (${item.Year})</h3>\r\n                <img src=\"${item.Poster}\" alt=\"Porter of ${item.Title}\" />\r\n                </a>\r\n            </li>`;\n        });\n        console.log(movie);\n        favEl.innerHTML = movie;\n    } catch  {\n        console.log(\"Could not create list \");\n    }\n}\n\n\n// event listener to make sure the dom is loaded before the js is executed\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const searchButton = document.querySelector(\"#searchButton\");\n    const searchInput = document.querySelector(\"#searchInput\");\n    //  event listener for when the research is sent\n    searchButton.addEventListener(\"click\", ()=>{\n        const searchTerm = searchInput.value; // getting the value from the search input\n        (0, $82280c2c8608ffc1$export$4b597114ade5582d)(searchTerm); // redirecting to the search results page with the search term\n    });\n});\n(0, $82280c2c8608ffc1$export$9eb1cf087813c7e)(); // creates the search box component\n(0, $3ba5b6daed797c99$export$596743d694fcb1b6)(); // creates the banner component\n(0, $e7d5ca7239cfce20$export$c2559589a6ea7c80)(\".fav-user-list\"); // I wanted to add the icons from here, but the path doesn't work\n // const menuDiv = document.querySelector(\".menu\");\n // const userIcon = document.createElement(\"img\");\n // userIcon.src = \"../public/images/mnp-logo.svg\";\n // menuDiv.appendChild(userIcon);\n\n\n//# sourceMappingURL=index.78594349.js.map\n","import { createSearchBox, redirectToSearchResults } from './search';\r\nimport { createBanner } from './homePage.mjs';\r\nimport { movieFavList } from './userLists.mjs';\r\n\r\n// event listener to make sure the dom is loaded before the js is executed\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  const searchButton = document.querySelector(\"#searchButton\");\r\n  const searchInput = document.querySelector(\"#searchInput\");\r\n\r\n  //  event listener for when the research is sent\r\n  searchButton.addEventListener(\"click\", () => {\r\n    const searchTerm = searchInput.value; // getting the value from the search input\r\n    redirectToSearchResults(searchTerm); // redirecting to the search results page with the search term\r\n  });\r\n});\r\n\r\ncreateSearchBox(); // creates the search box component\r\n\r\ncreateBanner(); // creates the banner component\r\n\r\nmovieFavList(\".fav-user-list\");\r\n// I wanted to add the icons from here, but the path doesn't work\r\n// const menuDiv = document.querySelector(\".menu\");\r\n\r\n// const userIcon = document.createElement(\"img\");\r\n// userIcon.src = \"../public/images/mnp-logo.svg\";\r\n\r\n// menuDiv.appendChild(userIcon);","// creates the search box\r\nexport function createSearchBox() {\r\n\r\n  const searchInput = document.createElement(\"input\");\r\n  searchInput.setAttribute(\"type\", \"text\");\r\n  searchInput.setAttribute(\"id\", \"searchInput\");\r\n  searchInput.setAttribute(\"placeholder\", \"Enter your search...\");\r\n  searchInput.classList.add(\"search-input\");\r\n\r\n\r\n  // create the search button element\r\n  const searchButton = document.createElement(\"button\");\r\n  searchButton.setAttribute(\"id\", \"searchButton\");\r\n  searchButton.textContent = \"Search\";\r\n  searchButton.classList.add(\"search-button\");\r\n\r\n  const searchBox = document.createElement(\"div\");\r\n  searchBox.classList.add(\"search-box\");\r\n  searchBox.appendChild(searchInput);\r\n  searchBox.appendChild(searchButton);\r\n\r\n  // append the search box and button to the menu div\r\n  const menuDiv = document.querySelector(\".menu\");\r\n  menuDiv.prepend(searchBox);\r\n}\r\n\r\n// redirect to search results page\r\nexport function redirectToSearchResults(searchTerm) {\r\n  // Create URL parameters and set the search term\r\n  const urlParams = new URLSearchParams();\r\n  urlParams.set(\"search\", searchTerm);\r\n\r\n  // create the new URL with the search term as a parameter\r\n  const newUrl = `results/results.html?${urlParams.toString()}`;\r\n\r\n  // redirect the page to the new URL\r\n  window.location.href = newUrl;\r\n}","import { fetchMovieBySearch, addMovieToStorage} from './externalServices.mjs';\r\n\r\n// creates the home page banner\r\nexport async function createBanner() {\r\n    try {\r\n      const mainElement = document.querySelector(\"main\");\r\n      const bannerSection = document.createElement(\"section\");\r\n      const bannerDiv = document.createElement(\"div\");\r\n      bannerDiv.classList.add(\"banner\");\r\n      const bannerTitle = document.createElement(\"h1\");\r\n      bannerTitle.textContent = \"Welcome to Movie Night Planner!\";\r\n\r\n      const bannerMessage = document.createElement(\"p\");\r\n      bannerMessage.textContent = \"🎬 -- Lights, Camera, Action! Plan Your Perfect Movie Night. --🍿\";\r\n  \r\n      bannerDiv.appendChild(bannerTitle);\r\n      bannerDiv.appendChild(bannerMessage);\r\n      bannerSection.appendChild(bannerDiv);\r\n      mainElement.appendChild(bannerSection);\r\n    \r\n      // fetching movie data using the fetchMovieBySearch function and the keyword \"dark\" as it is common in films name\r\n      const bannerMovies = await fetchMovieBySearch(\"dark\");\r\n    //   console.log(bannerMovies); \r\n      const bannerPosters = createBannerPosters(bannerMovies); // creating the HTML template for banner posters\r\n\r\n      const postersContainer = document.createElement(\"div\");\r\n      postersContainer.classList.add(\"posters-container\");\r\n      postersContainer.innerHTML = bannerPosters;\r\n  \r\n      // applied additional styling using js to experiment \r\n      postersContainer.style.display = \"flex\";\r\n      postersContainer.style.flexDirection = \"row\";\r\n      postersContainer.style.overflowX = \"auto\";\r\n      postersContainer.style.gap = \"10px\";\r\n      postersContainer.style.transform = \"scale(0.8)\";\r\n  \r\n      const posterImages = postersContainer.querySelectorAll(\"img\"); // selecting all img elements within the posters container\r\n      posterImages.forEach((img) => {\r\n        // applying additional styling to each poster image\r\n        img.style.height = \"500px\";\r\n        img.style.width = \"300px\";\r\n        img.style.objectFit = \"cover\";\r\n        img.style.transition = \"transform 0.3s\";\r\n      });\r\n  \r\n      bannerDiv.appendChild(postersContainer);\r\n    } catch (error) {\r\n      console.error(\"An error occurred:\", error);\r\n    }\r\n  }\r\n  \r\n// create the HTML template for the banner posters\r\nfunction createBannerPosters(bannerMovies) {\r\n    if (!bannerMovies || !Array.isArray(bannerMovies)) {\r\n      return \"\"; // return an empty string if the movie data is invalid\r\n    }\r\n  \r\n    let template = \"\";\r\n  \r\n    bannerMovies.forEach((movie) => {\r\n      const moviePoster = movie.Poster;\r\n      const mediaType = movie.Type;\r\n      const movieTitle = movie.Title;\r\n  \r\n      if (mediaType === \"movie\") {\r\n        // if the media type is a movie, add the movie details to the template\r\n        template += `\r\n        <div class=\"movie-details\">\r\n          <a href=\"#\">\r\n          <button id=\"fav-Btn\" data-title=\"${movieTitle}\" onclick=\"${addMovieToStorage(movie)}\"><img src=\"/src/public/images/icons8-favorite-40.png\" alt=\"Fav Icon\"></button>\r\n            <img src=\"${moviePoster}\" alt=\"${movieTitle} poster\"/>\r\n          </a>\r\n        </div>`;\r\n      }\r\n    });\r\n  \r\n    return template;\r\n  }\r\n  ","import { getLocalStorage, setLocalStorage } from \"./utils.mjs\";\r\n// fetch a movie by its title\r\nexport async function getMoviesByTitle(title) {\r\n    const apiKey = \"f8b853da\"; // our active key\r\n    const baseURL = \"https://www.omdbapi.com/\";\r\n    const response = await fetch(`${baseURL}?apikey=${apiKey}&t=${title}`);\r\n    if (response.ok){\r\n        return response;\r\n    }\r\n    else{\r\n        throw new Error(\"Something went wrong\");\r\n    }\r\n}\r\n\r\n// fetch movies by search term\r\nexport async function getMoviesBySearch(search) {\r\n    const apiKey = \"f8b853da\";\r\n    const baseURL = \"https://www.omdbapi.com/\";\r\n    const response = await fetch(`${baseURL}?apikey=${apiKey}&s=${search}`);\r\n    if (response.ok){\r\n        return response;\r\n    }\r\n    else{\r\n        throw new Error(\"Something went wrong\");\r\n    }\r\n}\r\n\r\n// return the results by title\r\nexport async function fetchMovieByTitle(title) {\r\n    try {\r\n      const response = await getMoviesByTitle(title);\r\n      const data = await response.json();\r\n    //   console.log(data);\r\n    return data\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n}\r\n\r\n// return the search results\r\nexport async function fetchMovieBySearch(search) {\r\n    try {\r\n      const response = await getMoviesBySearch(search);\r\n      const data = await response.json();\r\n    //   console.log(data);\r\n    return data.Search // search is the property that returns the array of results\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n}\r\nexport function addMovieToStorage(movie){\r\n  const favList = getLocalStorage(\"fav-list\") || [];\r\n  const index = favList.findIndex((item) =>{ item.Title === movie.Title})\r\n  if (index === -1) {\r\n    favList.push({ ...movie, poster: movie.Poster, title: movie.Title});\r\n  } \r\n  setLocalStorage(\"fav-list\", favList);\r\n\r\n}","// retrieve data from localstorage\r\nexport function getLocalStorage(key) {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  }\r\n// save data to local storage\r\nexport function setLocalStorage(key, data) {\r\n    localStorage.setItem(key, JSON.stringify(data));\r\n  }","import { getLocalStorage } from './utils.mjs';\r\n\r\nexport function movieFavList(selector){\r\n    try{\r\n    const favList = getLocalStorage(\"fav-list\") || [];\r\n    const favEl = document.querySelector(selector);\r\n\r\n    const movie = favList.map((item) => {\r\n         const template = `<li>\r\n            <a href=\"#\">\r\n                <h3>${item.Title} (${item.Year})</h3>\r\n                <img src=\"${item.Poster}\" alt=\"Porter of ${item.Title}\" />\r\n                </a>\r\n            </li>`;\r\n\r\n    })\r\n    console.log(movie);\r\n    favEl.innerHTML = movie;\r\n} catch {\r\n    console.log(\"Could not create list \");\r\n}\r\n   \r\n}"],"names":["$2a0a9d2c002157bd$export$d3720feff416e85b","key","JSON","parse","localStorage","getItem","$5169deaf9825f95a$export$afe26c2b188eab91","search","response","fetch","ok","Error","$5169deaf9825f95a$export$5afefe6cdf78f2a1","data","json","Search","error","console","$3ba5b6daed797c99$export$596743d694fcb1b6","mainElement","document","querySelector","bannerSection","createElement","bannerDiv","classList","add","bannerTitle","textContent","bannerMessage","appendChild","bannerMovies","bannerPosters","$3ba5b6daed797c99$var$createBannerPosters","Array","isArray","template","forEach","movie","moviePoster","Poster","mediaType","Type","movieTitle","Title","favList","index","findIndex","item","push","poster","title","setItem","stringify","postersContainer","innerHTML","style","display","flexDirection","overflowX","gap","transform","posterImages","querySelectorAll","img","height","width","objectFit","transition","addEventListener","searchButton","searchInput","searchTerm","value","urlParams","URLSearchParams","set","newUrl","toString","window","location","href","setAttribute","searchBox","menuDiv","prepend","selector","favEl","map","Year","log"],"version":3,"file":"index.78594349.js.map"}